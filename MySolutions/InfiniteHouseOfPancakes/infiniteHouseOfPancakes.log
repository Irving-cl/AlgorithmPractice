Infinite House of Pancakes

解法一（错误）：
int totalMinutes = 0;
while( pancakes are left )
    if special minute is meaningful
        server.specialMinute();
    else
        diners.eat();
return totalMinutes;

bool isSpecialMinuteMeaningful
    return ( mostPancakes / 2 ) > numMostPancakes;

结果：
1.对于样例，迅速产生正确结果；
2.对于small-practice.in，结果错误；
3.对于large-practice.in，结果错误； 

编写过程：
    这是第一次碰到了解决不了的问题，也是第一次算法本身错了。因为实在找不到错误的原因，所以运行了其他人的代码，对比了答案，发现了错误。发现的那个错误是这样的：对于单个9，可以用两次分成3个3，这样总共耗时5分钟；而按我的对半分法，最后用了6分钟；这点是我想算法的时候完全没想到的。所以这次我真的束手无策了。不过我想我总会碰到我解不出的题目的。这次我打算看别人的解法了。不过我觉得这道题可能也不是非常难，可能是我想的方向错了吧。

日期：2015.9.13

//==================================================================================

其他人的解法：
int lim;
int divs = 0;
int ans = maxNumPancakes;
int [] numPancakesInPlates;
for( int lim = 1; lim <= maxNumPancakes; lim++ )
    for( int num : numPancakesInPlates )
        divs += ( num - 1 ) / lim;
    ans = min( ans, divs + lim );
return ans;

    我心里大概也有数，那些排的靠前的选手们的做法应该会非常简单，可实际看到以后仍旧会感到惊讶。昨天晚上到今天早上看了几位选手的解法，虽然代码不同，可算法却都是一模一样的。我看懂了，但是我不知道它为什么是正确的，也不知道为什么这样做。

日期：2015.9.14